

@{
    ViewData["Title"] = "Index";
}


<h4>Index Product</h4>
<hr />	
<p>
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</p>
@(Html.Kendo().Grid<ProductDetailsViewModel>()
    .Name("gridProduct")
    .Columns(columns =>
    {
        columns.Bound(c => c.Id).Title(" ").Width(250).Locked(true).Filterable(false).Sortable(false).ClientTemplate(
            "<a class=\"btn btn-success\" href='" +
                Url.Action("Details", ((string)ViewData["ControllerNameForGrid"])) +
                "/#= Slug_Name #'" +
            ">Details</a> " +
            "<a class=\"btn btn-primary\" href='" +
                Url.Action("Edit", ((string)ViewData["ControllerNameForGrid"])) +
                "/#= Slug_Name #'" +
            ">Edit</a> " +
            "<a class=\"btn btn-danger\" href='" +
                Url.Action("Delete", ((string)ViewData["ControllerNameForGrid"])) +
                "/#= Slug_Name #'" +
            ">Delete</a>"
        );		
            columns.Bound(c => c.RowStatus).Title("RowStatus").Width(100);
            columns.Bound(c => c.Code).Title("Code").Width(200);
            columns.Bound(c => c.Name).Title("Name").Width(200);
            columns.Bound(c => c.Slug_Name).Title("Slug_Name").Width(200);
            columns.Bound(c => c.Code).Title("Code").Width(200);
            columns.Bound(c => c.Name).Title("Name").Width(200);
            columns.Bound(c => c.Slug_Name).Title("Slug_Name").Width(200);
            columns.Bound(c => c.AutoSlug).Title("AutoSlug").Width(200);
            columns.Bound(c => c.FkProductId).Title("FkProductId").Width(200);
            columns.Bound(c => c.Specification_Html).Title("Specification_Html").Width(200);
            columns.Bound(c => c.ShortDescription_Html).Title("ShortDescription_Html").Width(200);
            columns.Bound(c => c.LongDescription_Html).Title("LongDescription_Html").Width(200);
            columns.Bound(c => c.SKU).Title("SKU").Width(200);
            columns.Bound(c => c.Color).Title("Color").Width(200);
            columns.Bound(c => c.Size).Title("Size").Width(200);
            columns.Bound(c => c.Material).Title("Material").Width(200);
            columns.Bound(c => c.Style).Title("Style").Width(200);
            columns.Bound(c => c.Price).Title("Price").Width(200).Format("{0:N2}").HtmlAttributes(new { @class = "col-align-right" });
            columns.Bound(c => c.CCY).Title("CCY").Width(200);
            columns.Bound(c => c.Country).Title("Country").Width(200);
            columns.Bound(c => c.Producer).Title("Producer").Width(200);
            columns.Bound(c => c.Status).Title("Status").Width(200);
            columns.Bound(c => c.ImageSlug).Title("ImageSlug").Width(200);
            columns.Bound(c => c.Rating).Title("Rating").Width(200).Format("{0:N0}").HtmlAttributes(new { @class = "col-align-right" });
            columns.Bound(c => c.CountView).Title("CountView").Width(200).Format("{0:N0}").HtmlAttributes(new { @class = "col-align-right" });
            columns.Bound(c => c.IsService).Title("IsService").Width(200);
            columns.Bound(c => c.Tags).Title("Tags").Width(200);
            columns.Bound(c => c.KeyWord).Title("KeyWord").Width(200);
            columns.Bound(c => c.MetaData).Title("MetaData").Width(200);
            columns.Bound(c => c.Note).Title("Note").Width(200);
            columns.Bound(c => c.CountComment).Title("CountComment").Width(200).Format("{0:N0}").HtmlAttributes(new { @class = "col-align-right" });
            columns.Bound(c => c.CountReply).Title("CountReply").Width(200).Format("{0:N0}").HtmlAttributes(new { @class = "col-align-right" });
            columns.Bound(c => c.CreatedDate).Title("CreatedDate").Width(200);
            columns.Bound(c => c.UpdatedDate).Title("UpdatedDate").Width(200);
            columns.Bound(c => c.CreatedBy).Title("CreatedBy").Width(200);
            columns.Bound(c => c.UpdatedDate).Title("UpdatedDate").Width(200);
    })
    .HtmlAttributes(new { style = "height: 550px;" })
    .Resizable(r => r.Columns(true))
    .Scrollable()
    .Groupable()
    .Sortable()
    .Filterable()
    .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(new int[] { 50, 100, 200, 500, 1000 })
        .ButtonCount(5))
    .DataSource(dataSource => dataSource
        .Ajax()
        .Read(read => read.Action("Index_Read", ((string)ViewData["ControllerNameForGrid"])))
        .PageSize(50)
    )
)
<p>
</p>
<p>
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</p>
