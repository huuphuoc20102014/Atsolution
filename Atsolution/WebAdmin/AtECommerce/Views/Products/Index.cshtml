
@inject IStringLocalizer<SharedResources> SharedLocalizer
@inject IViewLocalizer Localizer
@inject IStringLocalizer<GenEf.Efs.Entities.Product> EntityLocalizer
@inject IStringLocalizer<BaseEntityResources> BaseEntityLocalizer
@{
    ViewData["Title"] = SharedLocalizer["ViewTitle_List"] + " " + EntityLocalizer["Sản Phẩm"];
    var parentItem = ViewData["ParentItem"] as GenEf.Efs.Entities.Product;
    if (parentItem != null)
    {
        ViewData["Title"] = (string)ViewData["Title"] + " : " + parentItem.Code + " | " + parentItem.Name;
    }
}

<div class="container">
    <h4>
        @SharedLocalizer["ViewTitle_List"] @EntityLocalizer["Sản phẩm"]
        @if (parentItem != null)
        {
            @:: <span class="text-warning">@parentItem.Code | @parentItem.Name</span>
        }
    </h4>
    <hr />

    <p>
        <a asp-action="Create" class="btn btn-primary">@SharedLocalizer["Btn_CreateNew"]</a>
        @if (parentItem != null)
        {
            <a asp-action="Sort" asp-route-id="@parentItem.SlugName" class="btn btn-primary">@SharedLocalizer["Btn_SortIndex"]</a>
            <a asp-action="Index" asp-route-id="" class="btn btn-primary">@SharedLocalizer["Btn_ListAll"]</a>
        }
        else
        {
            <a asp-action="Sort" class="btn btn-primary">@SharedLocalizer["Btn_SortIndex"]</a>
        }
    </p>
</div>
@(Html.Kendo().Grid<ProductDetailsViewModel>()
            .Name("gridProduct")
            .Columns(columns =>
            {
                columns.Bound(c => c.Id).Title(" ").Width(180).Locked(true).Filterable(false).Sortable(false).ClientTemplate(
               "<a class=\"btn btn-success\" data-toggle=\"tooltip\" title=\"" + SharedLocalizer["Ttip_Detail"] + "\"" +
                   "href='" + Url.Action("Details", ((string)ViewData["ControllerNameForGrid"])) + "/#= " + nameof(ProductDetailsViewModel.Slug_Name) + " #'" +
               "><i class=\"far fa-eye\"></i></a> " +

               "<a class=\"btn btn-success\" data-toggle=\"tooltip\" title=\"" + SharedLocalizer["Ttip_Edit"] + "\"" +
                   "href='" + Url.Action("Edit", ((string)ViewData["ControllerNameForGrid"])) + "/#= " + nameof(ProductDetailsViewModel.Slug_Name) + " #'" +
               "><i class=\"far fa-pencil\"></i></a> " +

               "<a class=\"btn btn-danger\" data-toggle=\"tooltip\" title=\"" + SharedLocalizer["Ttip_Delete"] + "\"" +
                   "href='" + Url.Action("Delete", ((string)ViewData["ControllerNameForGrid"])) + "/#= " + nameof(ProductDetailsViewModel.Slug_Name) + " #'" +
               "><i class=\"far fa-trash-alt\"></i></a> "
           );
                columns.Bound(c => c.RowStatus).Title("RowStatus").Width(150);
                columns.Bound(c => c.ImageSlug).Title("Hình ảnh").Width(100).Locked(true).Filterable(false).Sortable(false).ClientTemplate(

                    "<img width=\"70\" src='" + "/Image" + "/#= ImageSlug #'" +
                    "/>"
                );

                columns.Bound(c => c.Code).Title("Code").Width(200);
                columns.Bound(c => c.Name).Title("Tên").Width(200);
                columns.Bound(c => c.Slug_Name).Title("SEO").Width(200);
                columns.Bound(c => c.AutoSlug).Title("AUTO SEO").Width(200);
                columns.Bound(c => c.FkProductId).Title("Mã loại").Width(150);
                columns.Bound(c => c.Color).Title("Color").Width(200);
                columns.Bound(c => c.Size).Title("Size").Width(200);
                columns.Bound(c => c.Style).Title("Style").Width(200);
                columns.Bound(c => c.Price).Title("Giá").Width(200).Format("{0:N2}").HtmlAttributes(new { @class = "col-align-right" });
                columns.Bound(c => c.PriceNew).Title("Giá khuyến mãi").Width(200).Format("{0:N2}").HtmlAttributes(new { @class = "col-align-right" });
                columns.Bound(c => c.CCY).Title("CCY").Width(200);
                columns.Bound(c => c.Country).Title("Quốc gia").Width(200);
                columns.Bound(c => c.Producer).Title("Nhà sản xuất").Width(200);
                columns.Bound(c => c.Tags).Title("Thẻ").Width(200);
                columns.Bound(c => c.KeyWord).Title("Từ khoá").Width(200);
                columns.Bound(c => c.MetaData).Title("MetaData").Width(200);
                columns.Bound(c => c.Note).Title("Ghi chú").Width(200);
                columns.Bound(c => c.CreatedDate).Title("Ngày tạo").Width(200);
                columns.Bound(c => c.UpdatedDate).Title("Ngày sửa").Width(200);
                columns.Bound(c => c.CreatedBy).Title("Người tạo").Width(200);
                columns.Bound(c => c.UpdatedBy).Title("Người sửa").Width(200);
            })
            .HtmlAttributes(new { style = "height: 550px;" })
            .Resizable(r => r.Columns(true))
            .Scrollable()
            .Groupable()
            .Sortable()
            .Filterable()
            .Pageable(pageable => pageable
                .Refresh(true)
                .PageSizes(new int[] { 50, 100, 200, 500, 1000 })
                .ButtonCount(5))
            .DataSource(dataSource => dataSource
                .Ajax()
                .Read(read => read.Action("Index_Read", ((string)ViewData["ControllerNameForGrid"])))
                .PageSize(50)
            )
)
<p>
</p>
<p>
    <a asp-action="Create" class="btn btn-primary">Tạo mới</a>
</p>

